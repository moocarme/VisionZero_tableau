<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='MotorCollisionsWorkbork_7Apr16' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' inline='true' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' version='9.3'>
      <connection class='textscan' directory='C:/Users/Matt/Documents/GitHub/Tableau Projects' filename='NYPD_Motor_Vehicle_Collisions (1).csv' password='' server=''>
        <relation name='NYPD_Motor_Vehicle_Collisions (1).csv' table='[NYPD_Motor_Vehicle_Collisions (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='DATE' ordinal='0' />
            <column datatype='datetime' name='TIME' ordinal='1' />
            <column datatype='string' name='BOROUGH' ordinal='2' />
            <column datatype='integer' name='ZIP CODE' ordinal='3' />
            <column datatype='real' name='LATITUDE' ordinal='4' />
            <column datatype='real' name='LONGITUDE' ordinal='5' />
            <column datatype='string' name='LOCATION' ordinal='6' />
            <column datatype='string' name='ON STREET NAME' ordinal='7' />
            <column datatype='string' name='CROSS STREET NAME' ordinal='8' />
            <column datatype='string' name='OFF STREET NAME' ordinal='9' />
            <column datatype='integer' name='NUMBER OF PERSONS INJURED' ordinal='10' />
            <column datatype='integer' name='NUMBER OF PERSONS KILLED' ordinal='11' />
            <column datatype='integer' name='NUMBER OF PEDESTRIANS INJURED' ordinal='12' />
            <column datatype='integer' name='NUMBER OF PEDESTRIANS KILLED' ordinal='13' />
            <column datatype='integer' name='NUMBER OF CYCLIST INJURED' ordinal='14' />
            <column datatype='integer' name='NUMBER OF CYCLIST KILLED' ordinal='15' />
            <column datatype='integer' name='NUMBER OF MOTORIST INJURED' ordinal='16' />
            <column datatype='integer' name='NUMBER OF MOTORIST KILLED' ordinal='17' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 1' ordinal='18' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 2' ordinal='19' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 3' ordinal='20' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 4' ordinal='21' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 5' ordinal='22' />
            <column datatype='integer' name='UNIQUE KEY' ordinal='23' />
            <column datatype='string' name='VEHICLE TYPE CODE 1' ordinal='24' />
            <column datatype='string' name='VEHICLE TYPE CODE 2' ordinal='25' />
            <column datatype='string' name='VEHICLE TYPE CODE 3' ordinal='26' />
            <column datatype='string' name='VEHICLE TYPE CODE 4' ordinal='27' />
            <column datatype='string' name='VEHICLE TYPE CODE 5' ordinal='28' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>134</remote-type>
            <local-name>[TIME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;duration&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOROUGH]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>BOROUGH</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP CODE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>ZIP CODE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ON STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ON STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>ON STREET NAME</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CROSS STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CROSS STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>CROSS STREET NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OFF STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OFF STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>OFF STREET NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PERSONS INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PERSONS INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF PERSONS INJURED</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PERSONS KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PERSONS KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF PERSONS KILLED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PEDESTRIANS INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PEDESTRIANS INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF PEDESTRIANS INJURED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PEDESTRIANS KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PEDESTRIANS KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF PEDESTRIANS KILLED</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF CYCLIST INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF CYCLIST INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF CYCLIST INJURED</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF CYCLIST KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF CYCLIST KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF CYCLIST KILLED</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF MOTORIST INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF MOTORIST INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF MOTORIST INJURED</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF MOTORIST KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF MOTORIST KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>NUMBER OF MOTORIST KILLED</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 1]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 2]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 3]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 3</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 4]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 4</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 5]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 5</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIQUE KEY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UNIQUE KEY]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>UNIQUE KEY</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 1]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 2]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 3]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 3</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 4]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 4</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 5]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 5</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NYPD_Motor_Vehicle_Collisions (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 2' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 2]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 3' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 3]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 4' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 4]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 5' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 5]' role='dimension' type='nominal' />
      <column caption='Cross Street Name' datatype='string' name='[CROSS STREET NAME]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number Of Motorist Injured (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[NUMBER OF MOTORIST INJURED]' peg='0' size='4.61' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Off Street Name' datatype='string' name='[OFF STREET NAME]' role='dimension' type='nominal' />
      <column caption='On Street Name' datatype='string' name='[ON STREET NAME]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
      <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
      <column caption='Vehicle Type Code 1' datatype='string' name='[VEHICLE TYPE CODE 1]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 2' datatype='string' name='[VEHICLE TYPE CODE 2]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 3' datatype='string' name='[VEHICLE TYPE CODE 3]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 4' datatype='string' name='[VEHICLE TYPE CODE 4]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 5' datatype='string' name='[VEHICLE TYPE CODE 5]' role='dimension' type='nominal' />
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[DATE]' derivation='Day' name='[dy:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[DATE]' derivation='None' name='[none:DATE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TIME]' derivation='None' name='[none:TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VEHICLE TYPE CODE 1]' derivation='None' name='[none:VEHICLE TYPE CODE 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[DATE]' derivation='Quarter' name='[qr:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (MONTH(Date),YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:DATE:ok]' />
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (QUARTER(Date),WEEK(Date),YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:DATE:ok]' />
          <groupfilter function='level-members' level='[twk:DATE:qk]' />
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Matt\Documents\My Tableau Repository\Datasources\NYPD_Motor_Vehicle_Collisions (1).tde' schema='Extract' tablename='Extract' update-time='04/08/2016 12:23:04 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number Of Motorist Injured (bin)]' formula='SYS_NUMBIN([NUMBER OF MOTORIST INJURED],4.61)' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='578186' timestamp-start='2016-04-08 00:23:04.170' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>BOROUGH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BOROUGH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BOROUGH</remote-alias>
              <ordinal>0</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BRONX&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;STATEN ISLAND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577474</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 1</remote-alias>
              <ordinal>1</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accelerator Defective&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Windshield Inadequate&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>576899</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 2</remote-alias>
              <ordinal>2</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accelerator Defective&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Windshield Inadequate&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>506526</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 3</remote-alias>
              <ordinal>3</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>39</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accelerator Defective&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;View Obstructed/Limited&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>32589</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 4</remote-alias>
              <ordinal>4</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aggressive Driving/Road Rage&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unspecified&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6919</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 5</remote-alias>
              <ordinal>5</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alcohol Involvement&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Unspecified&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1802</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CROSS STREET NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CROSS STREET NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CROSS STREET NAME</remote-alias>
              <ordinal>6</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7229</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1 AVENUE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWICKY AVENUE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE</remote-alias>
              <ordinal>7</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1353</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-07-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-03-14#</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-05-19#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>8</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37913</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>23545205.235332765</statistic>
                <statistic aggregation='Avg' datatype='real'>40.722544709371661</statistic>
                <statistic aggregation='Min' datatype='real'>40.498948800000001</statistic>
                <statistic aggregation='Max' datatype='real'>40.912468099999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.077278950437161778</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.077278883608335194</statistic>
                <statistic aggregation='Var' datatype='real'>0.0059720361806693068</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0059720258517506185</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>958824125.8289094</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOCATION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOCATION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOCATION</remote-alias>
              <ordinal>9</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38152</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(40.4989488, -74.2443651)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;(40.9124681, -73.9025894)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>10</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37950</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-42743972.70112475</statistic>
                <statistic aggregation='Avg' datatype='real'>-73.92771997441092</statistic>
                <statistic aggregation='Min' datatype='real'>-74.254531600000007</statistic>
                <statistic aggregation='Max' datatype='real'>-73.7005968</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.082847622213738426</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.082847550569269304</statistic>
                <statistic aggregation='Var' datatype='real'>0.0068637285064703235</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0068637166353276349</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3159968412.9474816</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF CYCLIST INJURED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF CYCLIST INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF CYCLIST INJURED</remote-alias>
              <ordinal>11</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>13633.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.023578917510973976</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.15264245810458796</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.15264232610335987</statistic>
                <statistic aggregation='Var' datatype='real'>0.023299720016210886</statistic>
                <statistic aggregation='VarP' datatype='real'>0.023299679718244461</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13793.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF CYCLIST KILLED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF CYCLIST KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF CYCLIST KILLED</remote-alias>
              <ordinal>12</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF MOTORIST INJURED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF MOTORIST INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF MOTORIST INJURED</remote-alias>
              <ordinal>13</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>43</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF MOTORIST KILLED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF MOTORIST KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF MOTORIST KILLED</remote-alias>
              <ordinal>14</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PEDESTRIANS INJURED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF PEDESTRIANS INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PEDESTRIANS INJURED</remote-alias>
              <ordinal>15</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>15</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PEDESTRIANS KILLED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF PEDESTRIANS KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PEDESTRIANS KILLED</remote-alias>
              <ordinal>16</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PERSONS INJURED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF PERSONS INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PERSONS INJURED</remote-alias>
              <ordinal>17</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>43</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PERSONS KILLED</remote-name>
              <remote-type>16</remote-type>
              <local-name>[NUMBER OF PERSONS KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PERSONS KILLED</remote-alias>
              <ordinal>18</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>19</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OFF STREET NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OFF STREET NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OFF STREET NAME</remote-alias>
              <ordinal>20</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ON STREET NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ON STREET NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ON STREET NAME</remote-alias>
              <ordinal>21</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6510</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1 AVENUE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZULETTE AVENUE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIME</remote-name>
              <remote-type>134</remote-type>
              <local-name>[TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TIME</remote-alias>
              <ordinal>22</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>1440</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#23:59:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;duration&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UNIQUE KEY</remote-name>
              <remote-type>3</remote-type>
              <local-name>[UNIQUE KEY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UNIQUE KEY</remote-alias>
              <ordinal>23</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>578186</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>825397831950.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1427564.5414278449</statistic>
                <statistic aggregation='Min' datatype='integer'>22</statistic>
                <statistic aggregation='Max' datatype='integer'>3405171</statistic>
                <statistic aggregation='Stdev' datatype='real'>1461964.1271465148</statistic>
                <statistic aggregation='StdevP' datatype='real'>1461962.8628779582</statistic>
                <statistic aggregation='Var' datatype='real'>2137339109063.271</statistic>
                <statistic aggregation='VarP' datatype='real'>2137335412434.3159</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.4140860902369869e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 1</remote-alias>
              <ordinal>24</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMBULANCE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VAN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>577422</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 2</remote-alias>
              <ordinal>25</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMBULANCE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VAN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>516937</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 3</remote-alias>
              <ordinal>26</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMBULANCE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VAN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>32758</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 4</remote-alias>
              <ordinal>27</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;BICYCLE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VAN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>6938</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 5</remote-alias>
              <ordinal>28</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AMBULANCE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VAN&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1806</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP CODE</remote-name>
              <remote-type>2</remote-type>
              <local-name>[ZIP CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP CODE</remote-alias>
              <ordinal>29</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions (1).csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>10000</statistic>
                <statistic aggregation='Max' datatype='integer'>11697</statistic>
                <statistic aggregation='Count' datatype='integer'>577407</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number Of Motorist Injured (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number Of Motorist Injured (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number Of Motorist Injured (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>9</statistic>
                <statistic aggregation='Count' datatype='integer'>578186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[BOROUGH]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[BOROUGH]' member='%null%' />
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[BOROUGH]' to='&quot;STATEN ISLAND&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[CONTRIBUTING FACTOR VEHICLE 1]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[CONTRIBUTING FACTOR VEHICLE 1]' member='%null%' />
            <groupfilter from='&quot;Accelerator Defective&quot;' function='range' level='[CONTRIBUTING FACTOR VEHICLE 1]' to='&quot;Windshield Inadequate&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[CROSS STREET NAME]'>
          <groupfilter from='&quot;1 AVENUE&quot;' function='range' level='[CROSS STREET NAME]' to='&quot;ZWICKY AVENUE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[LATITUDE]' included-values='in-range'>
          <min>40.498948800000001</min>
          <max>40.9128276</max>
        </filter>
        <filter class='quantitative' column='[LONGITUDE]' included-values='in-range'>
          <min>-74.254531600000007</min>
          <max>-73.7005968</max>
        </filter>
        <filter class='quantitative' column='[NUMBER OF PERSONS INJURED]' included-values='in-range'>
          <min>0</min>
          <max>43</max>
        </filter>
        <filter class='categorical' column='[ON STREET NAME]'>
          <groupfilter from='&quot;1 AVENUE&quot;' function='range' level='[ON STREET NAME]' to='&quot;ZULETTE AVENUE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[VEHICLE TYPE CODE 1]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[VEHICLE TYPE CODE 1]' member='%null%' />
            <groupfilter from='&quot;AMBULANCE&quot;' function='range' level='[VEHICLE TYPE CODE 1]' to='&quot;VAN&quot;' />
          </groupfilter>
        </filter>
        <filter class='quantitative' column='[none:DATE:qk]' included-values='in-range'>
          <min>#2012-07-01#</min>
          <max>#2016-03-14#</max>
        </filter>
        <filter class='quantitative' column='[none:TIME:qk]' included-values='in-range'>
          <min>#00:00:00#</min>
          <max>#23:59:00#</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.562576' measure-ordering='alphabetic' measure-percentage='0.437424' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[dy:DATE:ok]' type='palette'>
            <map to='#32a251'>
              <bucket>2</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>1</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>4</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:DATE:ok]' type='palette'>
            <map to='#32a251'>
              <bucket>2</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>1</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>4</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:DATE:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>2012</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>2014</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>2016</bucket>
            </map>
            <map to='#d62728'>
              <bucket>2015</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:BOROUGH:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[qr:DATE:ok]' type='palette'>
            <map to='#32a251'>
              <bucket>2</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>1</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>4</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;Accelerator Defective&quot;</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;Illness&quot;</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;Outside Car Distraction&quot;</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;Tow Hitch Defective&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Cell Phone (hands-free)&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Failure to Yield Right-of-Way&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Pavement Defective&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Pavement Slippery&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Aggressive Driving/Road Rage&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Cell Phone (hand-held)&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Other Vehicular&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;Tire Failure/Inadequate&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;Backing Unsafely&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;Fell Asleep&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;Unsafe Lane Changing&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Animals Action&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Driver Inattention/Distraction&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Driver Inexperience&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;Oversized Vehicle&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Brakes Defective&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Physical Disability&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Reaction to Other Uninvolved Vehicle&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Shoulders Defective/Improper&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Unspecified&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Alcohol Involvement&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Other Electronic Device&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Traffic Control Device Improper/Non-Working&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;Windshield Inadequate&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Pedestrian/Bicyclist/Other Pedestrian Error/Confusion&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Traffic Control Disregarded&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Unsafe Speed&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;View Obstructed/Limited&quot;</bucket>
            </map>
            <map to='#ccc94d'>
              <bucket>&quot;Following Too Closely&quot;</bucket>
            </map>
            <map to='#ccc94d'>
              <bucket>&quot;Passing or Lane Usage Improper&quot;</bucket>
            </map>
            <map to='#ccc94d'>
              <bucket>&quot;Turning Improperly&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Failure to Keep Right&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Headlights Defective&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Passenger Distraction&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;Steering Failure&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Drugs (Illegal)&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Glare&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Other Lighting Defects&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Prescription Medication&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Fatigued/Drowsy&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Lane Marking Improper/Inadequate&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Lost Consciousness&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;Obstruction/Debris&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:VEHICLE TYPE CODE 1:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;FIRE TRUCK&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;SPORT UTILITY / STATION WAGON&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;PEDICAB&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;OTHER&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;LARGE COM VEH(6 OR MORE TIRES)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;AMBULANCE&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;UNKNOWN&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;PICK-UP TRUCK&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;PASSENGER VEHICLE&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;TAXI&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;LIVERY VEHICLE&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;VAN&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;SCOOTER&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;SMALL COM VEH(4 TIRES)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;BICYCLE&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;MOTORCYCLE&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;BUS&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Injuries by month'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[Exclusions (MONTH(Date),YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[mn:DATE:ok]' />
                <groupfilter function='level-members' level='[yr:DATE:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:DATE:ok]' member='3' />
                <groupfilter function='member' level='[yr:DATE:ok]' member='2016' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[Exclusions (MONTH(Date),YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</rows>
        <cols>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[mn:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Map NYC - Sum Persons Injured'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Cross Street Name' datatype='string' name='[CROSS STREET NAME]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='On Street Name' datatype='string' name='[ON STREET NAME]' role='dimension' type='nominal' />
            <column-instance column='[CROSS STREET NAME]' derivation='None' name='[none:CROSS STREET NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ON STREET NAME]' derivation='None' name='[none:ON STREET NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF MOTORIST INJURED]' derivation='Sum' name='[sum:NUMBER OF MOTORIST INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PEDESTRIANS INJURED]' derivation='Sum' name='[sum:NUMBER OF PEDESTRIANS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:LONGITUDE:qk]' included-values='non-null' />
          <filter class='quantitative' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF MOTORIST INJURED:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <filter class='quantitative' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PEDESTRIANS INJURED:qk]' included-values='in-range'>
            <min>1</min>
          </filter>
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PEDESTRIANS INJURED:qk]</column>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF MOTORIST INJURED:qk]</column>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:LONGITUDE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:LONGITUDE:qk]' field-type='quantitative' max='-8201016.7035529446' min='-8252382.3865605826' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:LATITUDE:qk]' field-type='quantitative' max='5014100.0045316294' min='4944312.9977072636' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PEDESTRIANS INJURED:qk]' max='30' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#b2beab</color>
                <color>#9bb28f</color>
                <color>#86a775</color>
                <color>#739b5d</color>
                <color>#618f47</color>
                <color>#508434</color>
                <color>#417824</color>
                <color>#346d15</color>
                <color>#286109</color>
                <color>#1e5600</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' field-type='quantitative' max='93' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' min='1' palette='area-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <size column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <lod column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CROSS STREET NAME:nk]' />
              <lod column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Where:&#9;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]</run>
                <run fontcolor='#787878'>&gt;</run>
                <run fontcolor='#787878'> &amp; </run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CROSS STREET NAME:nk]</run>
                <run fontcolor='#787878'>&gt;</run>
                <run fontcolor='#787878'>&#9;&#10;Number Of Persons Injured:&#9;</run>
                <run fontcolor='#787878'>&lt;</run>
                <run fontcolor='#787878'>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</run>
                <run fontcolor='#787878'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.56518518924713135' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:LATITUDE:qk]</rows>
        <cols>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Pie - Reason for accident by sum persons Injured'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[pcto:sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Accelerator Defective&quot;' function='range' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' to='&quot;Unsafe Speed&quot;' />
              <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;View Obstructed/Limited&quot;' />
              <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Windshield Inadequate&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' direction='ASC' using='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='779' />
            <format attr='width' value='817' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' />
              <wedge-size column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run>&lt;</run>
                <run>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
                <run>&lt;</run>
                <run>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Pie - Sum persons injured by borough'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[pcto:sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='444' />
            <format attr='width' value='464' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]' />
              <wedge-size column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sum person injured by day of week'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' field-type='quantitative' max='31477' min='20000' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</rows>
        <cols>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[wd:DATE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sum person injured by quater/year'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[DATE]' derivation='Quarter' name='[qr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Day-Trunc' name='[tdy:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[Exclusions (QUARTER(Date),WEEK(Date),YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[qr:DATE:ok]' />
                <groupfilter function='level-members' level='[twk:DATE:qk]' />
                <groupfilter function='level-members' level='[yr:DATE:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[qr:DATE:ok]' member='3' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[twk:DATE:qk]' member='#2012-08-05 00:00:00#' />
                  <groupfilter function='member' level='[yr:DATE:ok]' member='2012' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[Exclusions (QUARTER(Date),WEEK(Date),YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]' />
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</rows>
        <cols>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[tdy:DATE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sum person injured by street'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' type='nominal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='On Street Name' datatype='string' name='[ON STREET NAME]' role='dimension' type='nominal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[ON STREET NAME]' derivation='None' name='[none:ON STREET NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]'>
            <groupfilter from='&quot;1 AVENUE&quot;' function='range' level='[none:ON STREET NAME:nk]' to='&quot;ZULETTE AVENUE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]' direction='DESC' using='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
          <filter class='quantitative' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' included-values='in-range'>
            <min>733</min>
          </filter>
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]</column>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]</column>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</rows>
        <cols>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sum person injured by weekday/hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
            <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' palette='area-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[hr:TIME:ok]</rows>
        <cols>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[wd:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sum persons injured by quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[pcto:sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[DATE]' derivation='Quarter' name='[qr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='750' />
            <format attr='width' value='686' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]' />
              <wedge-size column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>41600</value>
                <value>0.21458673998380282</value>
              </tuple>
            </tuple-reference>
            <label-position x='-31' y='-45' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>53800</value>
                <value>0.27751842815212963</value>
              </tuple>
            </tuple-reference>
            <label-position x='39' y='-30' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>41662</value>
                <value>0.21490655675974021</value>
              </tuple>
            </tuple-reference>
            <label-position x='-46' y='19' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</field>
                  <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3</value>
                <value>56799</value>
                <value>0.29298827510432734</value>
              </tuple>
            </tuple-reference>
            <label-position x='24' y='49' />
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Vehicle involved by sum persons injured'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions (1)' name='textscan.0usomwp04ccvlz15dvp471yhk4tt' />
          </datasources>
          <datasource-dependencies datasource='textscan.0usomwp04ccvlz15dvp471yhk4tt'>
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='Vehicle Type Code 1' datatype='string' name='[VEHICLE TYPE CODE 1]' role='dimension' type='nominal' />
            <column-instance column='[VEHICLE TYPE CODE 1]' derivation='None' name='[none:VEHICLE TYPE CODE 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[pcto:sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AMBULANCE&quot;' function='range' level='[none:VEHICLE TYPE CODE 1:nk]' to='&quot;MOTORCYCLE&quot;' />
              <groupfilter from='&quot;PASSENGER VEHICLE&quot;' function='range' level='[none:VEHICLE TYPE CODE 1:nk]' to='&quot;TAXI&quot;' />
              <groupfilter function='member' level='[none:VEHICLE TYPE CODE 1:nk]' member='&quot;VAN&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]' direction='ASC' using='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
          <slices>
            <column>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='772' />
            <format attr='width' value='849' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]' />
              <wedge-size column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]' />
              <text column='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[pcto:sum:NUMBER OF PERSONS INJURED:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Collision Specifics'>
      <style />
      <size maxheight='800' maxwidth='2100' minheight='800' minwidth='2100' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='92381' x='0' y='0'>
              <zone h='90625' id='1' name='Pie - Reason for accident by sum persons Injured' show-title='true' w='47571' x='0' y='9375' />
              <zone h='100000' id='7' name='Vehicle involved by sum persons injured' show-title='true' w='44810' x='47571' y='0' />
              <zone h='9375' id='6' name='Pie - Reason for accident by sum persons Injured' pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' type='color' w='47571' x='0' y='0' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='7619' x='92381' y='0'>
              <zone h='40875' id='8' name='Vehicle involved by sum persons injured' pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]' type='color' w='7619' x='92381' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Injuries via location'>
      <style />
      <size maxheight='1200' maxwidth='1500' minheight='1200' minwidth='1500' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='94267' x='0' y='0'>
              <zone h='100000' id='3' type='layout-basic' w='54134' x='0' y='0'>
                <zone h='93857' id='1' name='Map NYC - Sum Persons Injured' show-title='true' w='54134' x='0' y='6143' />
                <zone h='6143' id='6' name='Map NYC - Sum Persons Injured' pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' type='color' w='22362' x='0' y='0' />
                <zone h='6143' id='7' name='Map NYC - Sum Persons Injured' pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' type='size' w='31772' x='22362' y='0' />
              </zone>
              <zone fixed-size='602' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='40133' x='54134' y='0'>
                <zone h='39834' id='15' name='Pie - Sum persons injured by borough' show-title='true' w='40133' x='54134' y='0'>
                  <layout-cache fixed-size-h='471' fixed-size-w='484' type-h='fixed' type-w='fixed' />
                </zone>
                <zone fixed-size='710' h='60166' id='13' is-fixed='true' name='Sum person injured by street' show-title='true' w='40133' x='54134' y='39834'>
                  <layout-cache cell-count-w='15' minheight='286' non-cell-size-w='51' type-h='scalable' type-w='cell' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='86' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='5733' x='94267' y='0'>
              <zone h='10582' id='14' name='Sum person injured by street' pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]' type='color' w='5733' x='94267' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Injuries via time'>
      <style />
      <size maxheight='800' maxwidth='1800' minheight='800' minwidth='1800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='95389' x='0' y='0'>
              <zone h='92250' id='1' name='Sum person injured by weekday/hour' show-title='true' w='14611' x='0' y='0' />
              <zone h='100000' id='7' name='Sum person injured by quater/year' show-title='true' w='59556' x='35833' y='0' />
              <zone h='7750' id='6' name='Sum person injured by weekday/hour' pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' type='color' w='14611' x='0' y='92250' />
              <zone h='100000' id='9' name='Sum persons injured by quarter' show-title='true' w='21222' x='14611' y='0' />
            </zone>
            <zone fixed-size='83' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='4611' x='95389' y='0'>
              <zone h='13375' id='8' name='Sum person injured by quater/year' pane-specification-id='1' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]' type='color' w='4611' x='95389' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Has Vision Zero Worked in NYC?</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='765' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='111' h='12345' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='82779' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='16806'>
              <flipboard active-id='1' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Since Bill de Blasio has taken office in 2013 one of his missions is to reduce the number of traffic related injuries and fatalities in his &quot;Vision Zero&quot; campaign. An ambitious campaign to reach zero traffic fatalities. Here I will analyse data provided by NYC at&#9; nycopendata.socrata.com in order to determine whether the camaign was successful in reducing the number of traffic-releated collisions.' captured-sheet='Injuries by month' id='1' />
                  <story-point caption='Noticing trends in the number of injuries versus month I decided to explore further looking into injuries recieved per day and quarter. Now I want to find when and where are the safest and most dangerous places prospective in NYC. These may be indicators in why or why not Vision Zero is working and could point to where improvements could be made. In this plot we can see that in general winter months, shown in the first quater in blue in general have less injuries in a given day, Indicating that winter months there are less injuries, perhaps because less pedestrians are on the street.' captured-sheet='Sum person injured by quater/year' id='5' />
                  <story-point caption='If we look at the breakdown in a pie chart, we can see that clearly winter and spring months (blue and green respectively) have disprotionate numbers of injuried persons reported.' captured-sheet='Sum persons injured by quarter' id='6' />
                  <story-point caption='Also looking at the number of injuries in a given time of daywe can see that the most common time for an injury is between 8-9AM on weekdays and from 4-6PM on weekdays, i.e. when a large portion of the population are commuting to work and again commuting home from work. Also we can note that Fridays from 2-7PM has a larger amount of injuries. Likely from people commuting home in what I describe as &quot;weekend mode&quot;, and have a lowered state of focus on their commute home from work, excited for the weekend and is more likely to get into an accident.' captured-sheet='Sum person injured by weekday/hour' id='7' />
                  <story-point caption='If we look at the sum of injuries over the given data range on a map of NYC we can see a number of locations of high injuries. Notably 125th and 42nd st in manhattan, Eastern Parkway and Atlantic Ave in Brooklyn, and Woodhaven Blvd and Queens Blvd in Queens to mention a few. These roads are all arterial roads in NYC that have a large number of lanes and fast moving traffic.' captured-sheet='Map NYC - Sum Persons Injured' id='8' />
                  <story-point caption='We can also look at the streets with the greatest numbers of injuries. Which agrees with some of the observations observed from intersections with large numbers of injuries seen on the previous slide.' captured-sheet='Sum person injured by street' id='9' />
                  <story-point caption='If we look at what kind of vehicles are involved in the injuries we can see that the large majority are cars and SUVs, compromising over 80% of reported injuries. However this may be likely due to their large population in NYC.' captured-sheet='Vehicle involved by sum persons injured' id='10' />
                  <story-point caption='Next if we look at the reason for the collision we might be able to suggest opportunities of avoidance. Here we can see that lack of drivers attention on the roads is the casue of the top 4 collisions, accounting for almost 60% of the total injuries caused.' captured-sheet='Pie - Reason for accident by sum persons Injured' id='11' />
                  <story-point caption='To conclude I have identified some key features in the motor collision dataset that could help the Vision Zero campaign decrease the number of traffic-related injuries that occur in NYC. First, by targeting efforts on daily commuters during morning and evening rush hour, especially during the summer and fall months, since these timeframes account for a disproportionate number of the injuries that occur. Second, targeting the arterial highways that run through the boroughs and neighbouring states. Finally,  by finding solutions to keep driver awareness and alertness. A solution to these problems could be to engage drivers alertness using mobile LED signs, that are often used to alert drivers of roadwork, repurposing them would be a quick and economical solution, and could be moved to intersections known for traffic-related injuries. ' captured-sheet='' id='12' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
        <zone flipboard-zone-id='5' h='41079' id='6' story-point-id='1' type='text' w='33268' x='38780' y='45643'>
          <formatted-text>
            <run>If we look at the number of injuries per month we can se no appreciable difference before (2012-2013) and after (2014+) Vision Zero was enacted.&#10;&#10;With only 3 complete years of aviable data however this does not give provide a reliable result of the effectiveness of the campaign.&#10;&#10;Regardless it is interesting to observe some time dependent trends in the data which may be worth exploring. Deviations in these large scale trends are likely to dominate any prospective reductions Vision Zero is likely to have.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='3' />
    </window>
    <window class='worksheet' name='Map NYC - Sum Persons Injured'>
      <cards>
        <edge name='left'>
          <strip size='251'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CROSS STREET NAME:nk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[usr:Calculation_722264791955378178:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Pie - Sum persons injured by borough'>
      <cards>
        <edge name='left'>
          <strip size='253'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[Number Of Motorist Injured (bin)]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pie - Reason for accident by sum persons Injured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sum person injured by day of week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[dy:DATE:ok]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[wd:DATE:ok]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sum person injured by quater/year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[mn:DATE:ok]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[tqr:DATE:qk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sum person injured by weekday/hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[hr:TIME:ok]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[wd:DATE:ok]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sum person injured by street'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CROSS STREET NAME:nk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:ON STREET NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Vehicle involved by sum persons injured'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sum persons injured by quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[tqr:DATE:qk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Injuries by month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[tmn:DATE:qk]</field>
            <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Injuries via location'>
      <viewpoints>
        <viewpoint name='Map NYC - Sum Persons Injured'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[sum:NUMBER OF PERSONS INJURED:qk]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Pie - Sum persons injured by borough' />
        <viewpoint name='Sum person injured by street'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:BOROUGH:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
    <window class='dashboard' name='Injuries via time'>
      <viewpoints>
        <viewpoint name='Sum person injured by quater/year'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[qr:DATE:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sum person injured by weekday/hour' />
        <viewpoint name='Sum persons injured by quarter' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Collision Specifics'>
      <viewpoints>
        <viewpoint name='Pie - Reason for accident by sum persons Injured'>
          <highlight>
            <color-one-way>
              <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Vehicle involved by sum persons injured'>
          <highlight>
            <color-one-way>
              <field>[textscan.0usomwp04ccvlz15dvp471yhk4tt].[none:VEHICLE TYPE CODE 1:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map NYC - Sum Persons Injured' width='192'>
      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
      UXqnfd//G2j5vsuTLjnXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pie - Sum persons injured by borough' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie - Reason for accident by sum persons Injured' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d5hcx3mn+9ZJnfPknBEHkQAIgKQokJRIkVaWvLJlSdfWOlu73pW9tnTX
      a1/bj32tlX0t70q2JEu2tCubS4siJYpiBDMCkeMAkzE5dpiZzn3OuX80MmaAiRiQc97naaCn
      +5w6X3fX79RXX31VJUzTNLGwWKFIy22AhcVyYgnAYkVjCcBiRWMJwGJFYwnAYkVjCcBiRWMJ
      wGJFYwnAYkVjCcBiRWMJwGJFo8z3RMMwFtMOC4tlYd4CiMfjKMq8T7ewuCOYdw2WZRmHw7GY
      tlhY3HasPoDFisYSgMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEoDF
      isYSgMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEoDFisYSgMWKxhKA
      xYrGEoDFisYSgMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEoDFisYS
      gMWKxhKAxYrGEoDFisYSgMWKxhKAxYrGEsC7jOeffYHW7v7Lf3f39lx+PjnSQzQF4UjkmnPO
      ndzPs8+9SHv/yA3ltbW2MJXMkI6H6evp5/SpE7yx7xA93b2c7+y89uD0BM88+xydvcOXX+rp
      7b78PDzQy1QOIpHwNaeN97fz/MuvMZHMXFuekeX86VO89sY+kln98suDXa0MReKX/76+vLkg
      TNM053NiIpHA6XTO+8IWS8Nff/U7FPszHO+Osml1JdGRLjpHBJtWBRnt6WbSuYo1qwvpP/Qq
      FDdTWuJFjLcymCsgp7mosenY/CGk3ASRhEZqopdUVgYjhilXECj0cVdtAY+/fBSPaxKX6efC
      VJKq4hC/8rH7+co/v0xQmaA/LrOuKsjYhfN0J31sqFIY7I6SK6liXbWXlrfewlu3lbLSIKsD
      OY6Mu5GS/cTHE3iCPqbG+rCVNjI6GuFXP/0RXn3lZeLRMO0XRnHZfARry1AjF+hJeSlWR5nU
      SnFmJilvWs/De+6b9fdlCeBdxpmWPmqKJF450kqBSyKjZ4hOSVQVO4iFI0xJhdRWaLQfO429
      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
    </thumbnail>
    <thumbnail height='192' name='Sum person injured by day of week' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sum person injured by quater/year' width='192'>
      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
      obF9Ppe2mwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sum person injured by weekday/hour' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sum person injured by street' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAJ50lEQVR4nO3dzW8T+R3H8c882LETx882sROSAIFAymOXp5YWaYXUbi97aNnDHrbtSm1B
      WmnvPa3Uf6GHVVG5sLdFW6mrahdE1ZYikNBStATYhQRIIJDEeXASjxM/z/SQCjILxC7EY/D3
      8zoh8rPyzeGdmXHm51Esy7JAJJTa6AGIGokBkGh6owegtXfj2lUsVTR0x4PwBONYmLyPmWwJ
      5VIBnYkOKGYFoUgY6XkD2YoLC2Pfoj2SQCzqR7lsIZcvwetxQTFLCEST8Lq1Rv9IdcMAmlA2
      X4KqlHH3/hhapmbR3RGFMXoHFa8Xo/dvYWp0EouKB+uSCXT0bIWpqLg1OIjSwEY8uDmIsjsG
      bzSE4swYNg7sx/b+3kb/SHWj8CK4+WTS01iq6Ght0aCoKtyqibHUPEL+NuguF4z5NEKRCOaN
      PLxeL3TFhGWaKBVzqFgKdL0FqktHwZhDINbZ1EcABkCivfApkGEYUFVeQ9Pr7YUD0DQNra2t
      azkLkeP4K5xEYwAkGgMg0RgAicYASDQGQKIxABLtpe8FOn37NL4Y+aKmtXvie/Dh9z982W9J
      tGZeOoCH2Ye4krpS01qf2/ey345oTfEUiERjACQaAyDRVr0GMIwMVKuMpbKG7NwMIpEQFotA
      Ih52aj6iunpuAJZVwYULF9ERDWAxl0F50cRVLYjOoIZE/ICTMxLVzXMDUBQNvb09cCkm0NKK
      bDGFvmQIpgnk83mUSiUn5ySqi1VPgQYGBp77NdM013wYIqfxIphEYwAkGgMg0RgAicYASDQG
      QKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoq26JvHjxMrqTMRQt4P7tYbQn
      uqBAwb49O5yckahuVt0S6dJVPHr0CLniEnQFGE/nkAyo3BJJTWPVLZHbBgbgUk1kCkDemMfe
      SBBGAfB4PNwSSU1h1QD8fj8AwOsDEAkCANra6z4TkWN4EUyiMQASjQGQaAyARGMAJBoDINEY
      AInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEi0VfcEnzlzDof278JXX9/AwmQK7nU9
      8LpVHDl8yMkZiepm1T3B4VAQs+l5FItF6LoOT4sbusbHpFLzWHVL5IGDBwEAGzZve+pr3BNM
      zYDXACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEm3V26Hr
      7cKnQxj8x8Oa1va9EcdPf7u9zhORNDwCkGirbIm0MDw8DJ/XhWzRgjGVQiiRQLFsYWvfBidn
      JKqbVY4AJibGJxCPxVEwUljKZvH10ASM+VluiaSm8fgIYFkWTpz6C4796hcAlvcEb+rbhNH7
      o2iPdKNSfoQNiSRyReuVeEzq+bHzuDl7s6a1/eF+HOk+UueJ6HX0JAAAd0cf4k+nPsOxXy5H
      0NXVBaBrecH6zgaM93znH57H6aHTNa19e9PbtgDuLdzDbG62ptfGvDH0BnpfZER6DTwOQAGw
      sacTlmnhxKnP8Lv/RdCMTl4/ic/vfl7T2qNbjuKjH3xU54moUZ4EoCg4/uujjZyFyHEr3gWy
      MHjpX0hXgGT3TmzpiTRsKCKnrHgXSEH/9u/hwd0xhMLtjZuIyEG2t0Fz2RxaA61YyuYaNQ+R
      o2wBWJaJ9T19CLa3NGoeIkfZAvC0B6Dk5zE1t9SoeYgctSIAC3MzKdwZnYBlFhs3EZGDbEcA
      n8+P7t5eaOAH35IMtpvhLKsCVdMRDocaNc8rL3PmLAp3hmta6925C77DP67zRPQybAHMGUto
      bXFDVZRGzfPKy5w9C+PLL2taG3rvPQbwirP9HSDc7kN6YRbGIq8BSAbbNYDuUjE1noKlcZ8M
      yWD/Q5ixiO4t2+D3NHSnJJFjbAGouobi0jzSmUKj5iFylO1XvT8aRfY/3yAa4b1A9TD7KIv8
      Ym076XwhDwIxb50nIlsAC1PTUD0apqcX4Ov048yZc+iIBpHOzGFhcpaPSX1Jl/96DyODMzWt
      3fOTbvzw5311nohsASiqikg0gUjQ+/gxqbquw+Vq4WNSqSk9dbU7PzuJ9EIvAj7P48ekPkuj
      9wQTrQXbhhgjX8BitoCOuL9xE9EzHTt3DJfGL9W09viu4/hg9wd1nqg52N4Fmpqagd/nQ7HA
      P4SRDLZToGRnD7YnOuDW+HcAksF2BFicm8Tf//lvZHM8ApAMtgAyBQtv9CeQmuWGGJLBdq4T
      iwbxaDqDgZ2BRs1DdfD+mfdxJXWlprWf/OwT7I7vrvNErw7b3aDtnhYobi/KfI+fhLCdArWH
      w3CZZSia1qh5iBxlOwXKptMYGhlGYF0v2hM8DZKubJZxYvBEzevf2fIOYq0xAEChXMDJGydr
      fu27W99FyLO8E7FSKmF86FbNr01s7ofudte8fqXvvN9ZQTAUAlTuB6DlAD6+9nHN699c/+aT
      ACqF/+u1b/W+9TiAXNbAp3/4fc2v/c0f/4xAvKPm9SvZPhVidm4Ot69/g1KZ1wAkg+0iONjm
      w8Deg4j4eRsuyWA713F5vajkc6iYVqPmIXKU/WRf1ZCZfoCpOX42KMlgvwaYzyAW70Q02Nq4
      iYgcZP9coJkUjIIJj4vvAtHrqbBUwrUanz0NfCeAnft+hB2WBW3F3aDD315HtlBEejyF9kQX
      FCjYt2fH2k1MtIYKS2V89beRmtevCECBrj99G7SRzWIxZ0BXgPF0DsmAyi2R1DSq3vjfv6Uf
      ixUNucwc9kaCMAp4JR6TSrQWqgbQFgijDQDCy7dGtPETU6iJ8GqXRGMAJBoDINEYAInGAEg0
      BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASrep+gHx2AQt5E0sLaUQiISwWgUQ8
      7MRsRHVXNYBrg9eguxRkpg1c1YLoDGpIxA84MRtR3VU9BYrH4oCrDZpLQ19XCC2tfu4JpqZR
      9QiwYfNWbHjG/3NPMDUDXgSTaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoD
      INEYAInGAEg0BkCiMQASreqGGMss4d7IGOanUgglEiiWLWzte9YWGaLXT9UArl+5jLvjk4i2
      BXB/aALrwy7k8wluiaSmUDWAnfsOITYxgdT4Q2xIJJErWnxMKjWNqgFAUZBIJpFIJh0Yh8hZ
      vAgm0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAk
      WtUNMeNjI7gzchczY5Nwr+uB163iyOFDTsxGVHdVjwDG3DS8/gh0XYenxQ1d1/mYVGoaVY8A
      /Tv3L/9j9x7b/3NPMDUDXgOQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJNp/
      AX/eu8SQv0VgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vehicle involved by sum persons injured' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sum persons injured by quarter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Injuries by month' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Injuries via location' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Injuries via time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Collision Specifics' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
